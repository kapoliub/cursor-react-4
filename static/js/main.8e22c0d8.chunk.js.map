{"version":3,"sources":["assets/img/padlock.svg","components/SignComponent/SignComponent.module.css","components/SignComponent/SignUp/SignUp.js","components/SignComponent/SignIn/SignIn.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","checkInput","target","regEx","value","match","style","borderColor","SignUp","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","subscribe","setSubscribe","nameRegExp","emailRegEx","passwordRegEx","changeHandler","e","name","className","s","Sign","formHeader","logoWrapper","src","padlock","alt","formBody","form","nameInputs","type","onChange","placeholder","required","checked","onClick","preventDefault","localStorage","setItem","removeItem","window","location","reload","console","log","actionsBlock","to","formFooter","SignIn","Boolean","getItem","rememberMe","setRememberMe","isLogged","setIsLogged","useEffect","title","alert","Welcome","App","path","exact","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e22c0d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/padlock.458958ee.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sign\":\"SignComponent_Sign__1Trd4\",\"logoWrapper\":\"SignComponent_logoWrapper__3UKGv\",\"formHeader\":\"SignComponent_formHeader__tPkpt\",\"form\":\"SignComponent_form__3s7zd\",\"actionsBlock\":\"SignComponent_actionsBlock__2EHIB\",\"formBody\":\"SignComponent_formBody__3ZAZY\",\"formFooter\":\"SignComponent_formFooter__RT_J-\",\"nameInputs\":\"SignComponent_nameInputs__tjfkf\"};","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport padlock from \"../../../assets/img/padlock.svg\";\nimport s from \"../SignComponent.module.css\";\n\nconst checkInput = (target, regEx) => {\n  if (target.value.match(regEx)) {\n    target.style.borderColor = \"green\";\n  } else {\n    target.style.borderColor = \"red\";\n  }\n};\n\nconst SignUp = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [subscribe, setSubscribe] = useState(true);\n\n  const nameRegExp = /^[a-z]{3,}/i;\n  const emailRegEx = /^[a-z]{3,}[@]{1}[a-z]{2,}[.]{1}[a-z]{2,}$/i;\n  const passwordRegEx = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}/;\n\n  const changeHandler = (e) => {\n    if (e.target.name === \"firstName\") {\n      checkInput(e.target, nameRegExp);\n      setFirstName(e.target.value);\n    } else if (e.target.name === \"lastName\") {\n      checkInput(e.target, nameRegExp);\n\n      setLastName(e.target.value);\n    } else if (e.target.name === \"email\") {\n      checkInput(e.target, emailRegEx);\n\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      checkInput(e.target, passwordRegEx);\n\n      setPassword(e.target.value);\n    } else if (e.target.name === \"subscribe\") {\n      setSubscribe(!subscribe);\n    }\n  };\n\n  const addUser = (e) => {\n    e.preventDefault();\n    if (\n      firstName.match(nameRegExp) &&\n      lastName.match(nameRegExp) &&\n      email.match(emailRegEx) &&\n      password.match(passwordRegEx)\n    ) {\n      localStorage.setItem(\"firstName\", firstName);\n      localStorage.setItem(\"lastName\", lastName);\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"password\", password);\n      localStorage.setItem(\"subscribed\", subscribe);\n      localStorage.removeItem(\"rememberMe\");\n\n      window.location.reload(false);\n    } else {\n      console.log(\"Something goes wrong. Check input data\");\n    }\n  };\n  return (\n    <div className={s.Sign}>\n      <div className={s.formHeader}>\n        <div className={s.logoWrapper}>\n          <img src={padlock} alt=\"padlock_img\" />\n        </div>\n        <p>Sign up</p>\n      </div>\n      <div className={s.formBody}>\n        <form className={s.form}>\n          <div className={s.nameInputs}>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              onChange={changeHandler}\n              value={firstName}\n              placeholder=\"First Name *\"\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              onChange={changeHandler}\n              value={lastName}\n              placeholder=\"Last Name *\"\n              required\n            />\n          </div>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={changeHandler}\n            value={email}\n            placeholder=\"Email Address *\"\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={changeHandler}\n            value={password}\n            placeholder=\"Password *\"\n            required\n          />\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"subscribe\"\n              onChange={changeHandler}\n              checked={subscribe}\n            />\n            <span>\n              I want to receive inspiration, marketing promotions and updates\n              via email\n            </span>\n          </label>\n          <input type=\"submit\" value=\"SIGN UP\" onClick={addUser} />\n        </form>\n        <div className={s.actionsBlock}>\n          <div></div>\n          <Link to=\"/signin\">Already have an account? Sign in</Link>\n        </div>\n      </div>\n      <div className={s.formFooter}>Copyright Â© Your Website 2020.</div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport padlock from \"../../../assets/img/padlock.svg\";\nimport s from \"../SignComponent.module.css\";\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(\n    Boolean(localStorage.getItem(\"rememberMe\"))\n  );\n  const [isLogged, setIsLogged] = useState(false);\n\n  const changeHandler = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    } else if (e.target.name === \"rememberMe\") {\n      setRememberMe(!rememberMe);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"rememberMe\") !== null &&\n      localStorage.getItem(\"rememberMe\") === \"true\"\n    ) {\n      setEmail(localStorage.getItem(\"email\"));\n      setPassword(localStorage.getItem(\"password\"));\n    }\n  });\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    if (\n      email === localStorage.getItem(\"email\") &&\n      password === localStorage.getItem(\"password\")\n    ) {\n      localStorage.setItem(\"rememberMe\", rememberMe);\n      setIsLogged(true);\n      console.log(\"You are logged in\");\n    } else {\n      alert(\"Email or password is wrong\");\n    }\n  };\n\n  return (\n    <div className={s.Sign}>\n      {isLogged ? <Redirect to=\"/welcome\" /> : null}\n      <div className={s.formHeader}>\n        <div className={s.logoWrapper}>\n          <img src={padlock} alt=\"padlock_img\" />\n        </div>\n        <p>Sign in</p>\n      </div>\n      <div className={s.formBody}>\n        <form className={s.form}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={changeHandler}\n            value={email}\n            placeholder=\"Email Address *\"\n            title=\"example@example.com\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={changeHandler}\n            value={password}\n            placeholder=\"Password *\"\n            title=\"Must contains at least 8 characters (16 max), including at least 1 number and includes both lower and uppercase letters\"\n          />\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"rememberMe\"\n              onChange={changeHandler}\n              checked={rememberMe}\n            />\n            <span>Remember me</span>\n          </label>\n          <input type=\"submit\" onClick={clickHandler} value=\"SIGN IN\" />\n        </form>\n        <div className={s.actionsBlock}>\n          <div>Forgot password?</div>\n          <Link to=\"/signup\">Don`t have an account? Sign Up</Link>\n        </div>\n      </div>\n      <div className={s.formFooter}>Copyright Â© Your Website 2020.</div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction Welcome() {\n  return (\n    <div className=\"Welcome\">\n      <h1>\n        Hello,{\" \"}\n        {localStorage.getItem(\"firstName\") + \" \" + localStorage.getItem(\"lastName\")}\n      </h1>\n      <Link to=\"/signin\">\n        <button>Exit</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Welcome;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport SignUp from \"./components/SignComponent/SignUp/SignUp\";\nimport SignIn from \"./components/SignComponent/SignIn/SignIn\";\nimport Welcome from \"./components/Welcome\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/welcome\">\n            <Welcome/>\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/signin\" />\n          </Route>\n        </Switch>\n        <h3>\n          hello\n        </h3>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}